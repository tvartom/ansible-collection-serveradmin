---
- include_role:
    name: applications
    tasks_from: default_values
    public: yes

#- include_role:
#    name: dnf_module
#    tasks_from: install_package_from_module
#  vars:
#    dnf:
#      module_name: php
#      module_spec: "{{ webserver_php_version }}"
#      packages:
#        - "{{ php_package }}-fpm"
#        - "{{ php_package }}-mysqlnd" # 2019-12-30 LL Moved from mariadb
#        - "{{ php_package }}-cli" # 2020-10-14 LL Needed for composer
#  when: ansible_distribution_file_variety == "RedHat"

- name: Install PHP
  become: yes
  dnf:
    name:
      - "{{ php_package }}-fpm"
      - "{{ php_package }}-mysqlnd" # 2019-12-30 LL Moved from mariadb
      - "{{ php_package }}-cli" # 2020-10-14 LL Needed for composer
      # - "{{ php_package }}-mcrypt" #Deprecated, removed from 7.2, OpenSSL used instead.
      #- "{{ php_package }}-mbstring" #Add to application.linux_packages when needed
      #- "{{ php_package }}-cli"  #Add to application.linux_packages when needed
      #- "{{ php_package }}-json" #Add to application.linux_packages when needed
      #- "{{ php_package }}-simplexml" #Add to application.linux_packages when needed
      #- "{{ php_package }}-curl" #Add to application.linux_packages when needed
      #- "{{ php_package }}-gd" #Add to application.linux_packages when needed
      #- "{{ php_package }}-bcmath" # 2020-02-23 LL Behövs av CiviCRM, Add to application.linux_packages when needed
    state: present
  when: ansible_distribution_file_variety == "RedHat"

### php default for php-cli #################################################################
- name: "Set php74/php8 etc as default php"
  become: yes
  alternatives:
    name: php
    path: "{{ php_cli_bin }}"
    link: /usr/bin/php
  when: php_cli_bin | d("/usr/bin/php") != "/usr/bin/php"

#- include_role:
#    name: dnf_module
#    tasks_from: install_package_from_module
#  vars:
#    dnf:
#      module_name: php
#      module_spec: "{{ webserver_php_version }}"
#      packages:
#        - "{{ php_package }}-opcache"
#  when: ansible_distribution_file_variety == "RedHat" and not applications_devmode

- name: Install php-opcache (Not with devmode)
  become: yes
  dnf:
    name:
      - "{{ php_package }}-opcache"
    state: present
  when: ansible_distribution_file_variety == "RedHat" and not applications_devmode

- name: Install extra packages for PHP FastCGI Process Manager (YUM)
  become: yes
  yum:
    name:
      # För att kunna anropa php-fpm utan nginx:
      # https://maxchadwick.xyz/blog/getting-the-php-fpm-status-from-the-command-line
      - fcgi
    state: present
  when: ansible_distribution_file_variety == "RedHat"

- name: Remove Default www.conf
  become: yes
  shell: mv {{ php_fpm_pool_path }}/www.conf {{ php_fpm_pool_path }}/www.conf.removed$(date +"%Y%m%d").ansible
  args:
    removes: "{{ php_fpm_pool_path }}/www.conf"

- name: "Fix umask for php"
  become: yes
  copy:
    src: php-fpm.service.d_override.conf
    dest: /etc/systemd/system/{{ php_fpm_service }}.service.d/override.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"

- name: "Combine settings with default-values for opcache"
  set_fact:
    php_opcache_settings: "{{ php_opcache_default | combine( php_opcache | d({}) ) }}"
  when: not applications_devmode

# To comment out a setting, set the value to: null
# Null value: null
# Null test: is none
- name: "opcache php-ini"
  become: yes
  lineinfile:
    path: "{{ php_opcache_ini }}"
    regexp: |-
      ^;?opcache\.{{ item.key }} *=
    line: "{{ ';' if item.value is none else '' }}opcache.{{ item.key }}={{ item.value }}"
  loop: "{{ php_opcache_settings | dict2items}}"
  when: not applications_devmode
  notify: "Reload php-fpm"

- name: Autostart php-fpm
  become: yes
  service:
    name: "{{ php_fpm_service }}"
    enabled: yes
