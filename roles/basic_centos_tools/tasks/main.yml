---
- include_role:
    name: applications
    tasks_from: default_values
    public: yes
  tags:
    - bootstrap

- debug:
   var: current_packages

# (  packages | selectattr('when', 'undefined') | list)
# (packages | selectattr('when', 'defined') | selectattr('when') | list)

- name: Hämta default-värden
  set_fact:
    basic: "{{ basic_default | combine(basic | default({})) }}"
  tags:
    - bootstrap

#https://wiki.almalinux.org/repos/AlmaLinux.html
- name: "Enable powertools/crb-repo (DNF)"
  become: yes
  shell:
    cmd: >-
      dnf config-manager --set-enabled {% if ansible_distribution_major_version > 8 %}crb{% else %}powertools{% endif %}
    warn: false # Ansible is warning for using dnf

#byobu finns i detta:
- name: Enable EPEL-repo (DNF)
  become: yes
  dnf:
    name: epel-release
    state: latest

- name: Import REMI GPG key.
  become: yes
  rpm_key:
    key: https://rpms.remirepo.net/RPM-GPG-KEY-remi2021
    state: present

- name: Enable REMI-repo (DNF)
  become: yes
  dnf:
    name: https://rpms.remirepo.net/enterprise/remi-release-9.rpm
    state: latest

- name: "Set timezone on server (Stockholm is default)"
  become: yes
  timezone:
    name: "{{ basic.timezone }}"
  tags:
    - bootstrap

- name: Install some basic tools (DNF)
  become: yes
  dnf:
    name: "{{ basic.package_to_install }}"
    state: present

- name: Install some basic tools with disabled GPG-check (DNF)
  become: yes
  dnf:
    name: "{{ basic.package_to_install_unsafe }}"
    state: present
    disable_gpg_check: true



# Set (httpd_can_network_connect) flag on and keep it persistent across reboots
- name: Install libsemanage to fix selinux in ansible (YUM)
  become: yes
  yum:
    # CentOS 8: python3-libsemanage
    name: "{{ 'python3-libsemanage' if ansible_distribution_major_version | int > 7 else 'libsemanage-python' }}"
    state: present

- name: Put SELinux in permissive mode, logging actions that would be blocked.
  become: yes
  selinux:
    policy: targeted
    state: permissive
  tags:
    - bootstrap


- name: "github.com to global known_hosts"
  become: yes
  become_method: sudo
  known_hosts:
    path: "/etc/ssh/ssh_known_hosts"
    name: github.com
    # Generate key: $ ssh-keyscan -H github.com 2> /dev/null
    key: "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
  tags:
    - bootstrap

### python default for python3 #################################################################
- name: "Set python3 as default python"
  become: yes
  alternatives:
    name: python
    path: /usr/bin/python3
    link: /usr/bin/python

#Source: https://serverfault.com/questions/959026/how-do-i-generate-and-set-the-locale-using-ansible

#- name: Ensure localisation files for '{{ basic.system_locale }}' are available
#  locale_gen:
#    name: "{{ basic.system_locale }}"
#    state: present

#- name: Ensure localisation files for '{{ basic.system_language }}' are available
#  locale_gen:
#    name: "{{ basic.system_language }}"
#    state: present

#- name: Get current locale and language configuration
#  command: localectl status
#  register: locale_status
#  changed_when: false

#- name: Parse 'LANG' from current locale and language configuration
#  set_fact:
#    locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"

#- name: Parse 'LANGUAGE' from current locale and language configuration
#  set_fact:
#    locale_language: "{{ locale_status.stdout | regex_search('LANGUAGE=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"

#- name: Configure locale to '{{ basic.system_locale }}' and language to '{{ basic.system_language }}'
#  command: localectl set-locale LANG={{ basic.system_locale }} LANGUAGE={{ basic.system_language }}
#  changed_when: locale_lang != basic.system_locale or locale_language != basic.system_language
