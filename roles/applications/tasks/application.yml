---
- name: "Current application"
  debug:
    var: application

### Application process user ##########################################################################

- name: "Create user specific group for application"
  become: yes
  group:
    name: "{{ application.process_group }}"
    system: yes

- name: "Adding sudo users to the app-group for reading dir and files"
  become: yes
  user:
    name: "{{ item.name }}"
    groups: "{{ application.process_group }}"
    append: yes
  when: item.sudoer | default(false)
  loop: "{{ users + [{ 'name': serveradmin.process_user, 'sudoer': true }] }}"

- name: "Get info about process user"
  getent:
    database: passwd
    key: "{{ application.process_user }}"
    fail_key: false
  # Registrerar i getent_passwd

- name: "Create process user for application"
  become: yes
  user:
    name: "{{ application.process_user }}"
    group: "{{ application.process_group }}"
    createhome: yes
    move_home: no
    append: yes
    home: "/home/system/{{ application.process_user }}"
    system: yes
  when: getent_passwd[application.process_user] is none

- name: "Let nginx join group to to read source-data"
  become: yes
  user:
    name: "{{ nginx_user }}"
    groups: "{{ application.process_group }}"
    append: true
  notify: "Reload nginx"

### Databases ###############################################################################################

- name: "Create databases for application"
  become: yes
  mysql_db:
    name: "{{ database.database }}"
    collation: "{{ database.collation | default('utf8mb4_general_ci') }}"
    encoding: "{{ database.encoding | default('utf8mb4') }}"
    state: present
    login_user: root
    login_unix_socket: "/var/lib/mysql/mysql.sock"
  when: database.create | default(false)
  loop: "{{ application.databases | default([]) }}"
  loop_control:
    loop_var: database

- name: "Let application process (linux)-user have access to application databases"
  include_role:
    name: mariadb
    tasks_from: create_user
  vars:
    user:
      name: "{{ application.process_user }}"
      is_linux_user: true
      databases: "{{ application.databases }}"
  when: application.databases is defined

- name: "Create extra users for databases"
  include_role:
    name: mariadb
    tasks_from: create_user
  vars:
    user:
      name: "{{ databaseuser.1.user }}"
      host: "{{ databaseuser.1.host | d('localhost') }}"
      databases:
         - database: "{{ databaseuser.0.database }}"
           privileges: "{{ databaseuser.1.privileges | d(None) }}"
  with_subelements:
        - "{{ application.databases | d([]) | selectattr('extrausers', 'defined') | list }}"
        - extrausers
  loop_control:
    loop_var: databaseuser
  # loop: "{{ application.databases | d([]) | selectattr('extrausers', 'defined') | subelements('extrausers') }}"

### Git Config  ########################################################################################################
- name: "Config Git för application process user"
  include_role:
    name: git
    tasks_from: config_git_for_user
  vars:
    user:
      name: "{{ application.process_user }}"
      #fullname: "hela namnet" #Optional: annars använs user.name
      #email: "Epost" #Optional: annars används user.name @ inventory_hostname

### Directories #########################################################################################################

- name: "Create dir in /opt for organisation"
  become: yes
  file:
    path: "{{ temp_organisation_path }}"
    state: directory
    owner: "{{ serveradmin.process_user }}"
    group: "{{ serveradmin.process_group }}"
    mode: "u=rwx,g=rx,o=rx"
  when: (temp_organisation_path in application.path)
  vars:
    temp_organisation_path: "/opt/{{ application.organisation }}"

- name: "Create dir in /opt/organisation for application"
  become: yes
  file:
    path: "{{ application.path }}{{ item.path }}"
    state: directory
    owner: "{{ item.owner | d( application.process_user, true ) }}"
    group: "{{ item.group | d( application.process_group, true ) }}"
    setype: "{{ item.setype | d( '_default' ) }}"                  # httpd_sys_content_t
    mode: "{{ item.mode | d('u=rwx,g=rx,o=') }}"
  when: item.when | d(True)
  loop:
    - { path: "" }
    # Log, ägs av app-...:app-... nginx kan kan komma åt sin log.
    - { path: "/log" }
    - { path: "/log/nginx", setype: "httpd_sys_rw_content_t" }
    # För letsencrypt. Script körs av root. nginx behöver komma åt challenges
    - { path: "/letsencrypt",            when: "{{ application.any_letsencrypt }}" }
    - { path: "/letsencrypt/challenges", when: "{{ application.any_letsencrypt }}" }
    - { path: "/log/letsencrypt",        when: "{{ application.any_letsencrypt }}" }
    # För PHP
    - { path: "/log/php-fpm", setype: "httpd_sys_rw_content_t", when: "{{ application.any_enable_php }}" }
    - { path: "/php-fpm",                                       when: "{{ application.any_enable_php }}" }
    # För deploy, deploy-plugins
    - { path: "/repos", when: "{{ application.repos[0] is defined }}" }
    # För Java
    - { path: "/webapp",             when: false }
    # msmtp
    - { path: "/log/msmtp",             when: "{{ application.sendmail is defined }}" }
    # cron
    - { path: "/log/cron", mode: "u=rwx,g=rwx,o=",        when: "{{ application.cron is defined }}" }


### Letsencrypt #################################################################
# I can be hard to determine if it is a lag DNS-updates or other problems...
# Give some info in the response. Are we on the right server?
- name: "Create 404 for Letsencrypt, which shows this servers inventory name"
  become: yes
  template:
    src: "letsencrypt_404.html.j2"
    dest: "{{ application.path }}/letsencrypt/challenges/404.html"
    owner: "{{ application.process_user }}"
    group: "{{ application.process_group }}"
    mode: "u=rwx,g=rx,o=r"
  when: application.any_letsencrypt

### NodeJS ######################################################################
# Reading: https://www.sitepoint.com/quick-tip-multiple-versions-node-nvm/
# Ansible-role: https://github.com/morgangraphics/ansible-role-nvm
- name: "Install Node Version Manager (NVM)"
  include_role:
    name: "morgangraphics_nvm"
  vars:
    #include_role doesn't accept become, use variable. Even tmp-directory is necessary
    #ansible_become: yes
    #ansible_user: "{{ application.process_user }}"
    #ansible_remote_tmp: "/tmp/.ansible"
    nvm:
      user: "{{ application.process_user }}"
      default: true # Make this version default
      nodejs_version: "{{ application.nodejs_version }}"
      nvm_install: "curl"
      nvm_profile: "/home/system/{{ application.process_user }}/.bashrc"
  when: application.nodejs_version is defined

# Exempel:
# application:
#   nodejs_version: 14
#   npm_global_packages:
#     - @vue/cli
- name: "Install node.js package globally with npm for this application"
  become: yes
  become_user: "{{ application.process_user }}"
  shell:
    cmd: >-
      /bin/bash -lc "npm list --global --no-progress {{ item }} || npm install --global --no-progress {{ item }}"
    # Verkar låsa hela servern: source ~/.bashrc && npm list -g {{ item }} || npm install -g {{ item }}"
    chdir: "{{ application.path }}" # Denna spelar inte så stor roll...
  #npm:
  #  name: "{{ item }}"
  #  global: yes
  when: application.nodejs_version is defined
  loop: "{{ application.npm_global_packages | d([]) }}"

### PHP Composer ################################################################

#- name: "Install php-cli and php-json for composer"
#  include_role:
#    name: dnf_module
#    tasks_from: install_package_from_module
#  vars:
#    dnf:
#      module_name: php
#      module_spec: "{{ webserver_php_version }}"
#      packages:
#        - "{{ php_package }}-cli"
#        - "{{ php_package }}-json"
- name: Install php-cli and php-json for composer
  become: yes
  dnf:
    name:
      - "{{ php_package }}-cli"
      - "{{ php_package }}-json"
    state: present
  when: application.any_enable_php_composer


- name: "Create ~/.local/bin"
  become: yes
  become_user: "{{ application.process_user }}"
  file:
    path: "/home/system/{{ application.process_user }}/{{ item }}"
    state: directory
    mode: "u=rwx,g=rx,o="
  when: application.any_enable_php_composer
  loop:
    - ".local"
    - ".local/bin"

- name: "Install php composer"
  become: yes
  become_user: "{{ application.process_user }}"
  script:
    cmd: >-
      install_composer.sh --quiet --install-dir=$(echo -n ~{{ application.process_user }})/.local/bin --filename=composer
    chdir: "/home/system/{{ application.process_user }}"
    creates: "/home/system/{{ application.process_user }}/.local/bin/composer"
  when: application.any_enable_php_composer

### Redis #######################################################################

- name: Include Redis
  include_tasks: redis.yml
  when: application.enable_redis

### Sendmail ####################################################################

- name: "Create /msmtp"
  become: yes
  file:
    path: "{{ application.path }}/{{ item }}"
    owner: "{{ application.process_user }}"
    group: "{{ application.process_user }}"
    state: directory
    mode: "u=rwx,g=,o="
  when: sendmail_enable
  loop:
    - "msmtp"


# Instructions: https://github.com/google/gmail-oauth2-tools/blob/master/python/oauth2.py
- name: "Install Google gmail-oauth2-tools"
  become: yes
  get_url:
    # Trots flera Pullrequest, har Google inte fixat Python3 stöd.
    # url: https://raw.githubusercontent.com/google/gmail-oauth2-tools/master/python/oauth2.py
    # Länkar till den specifika commit som har en PR med fix
    url: https://raw.githubusercontent.com/micronn/gmail-oauth2-tools/daa2523aae9be3bd19b220f3b4d34262b3ab7685/python/oauth2.py
    owner: "{{ application.process_user }}"
    group: "{{ application.process_user }}"
    dest: "{{ application.path }}/msmtp/oauth2.py"
    mode: "u=rwx,g=,o="
  when: application.sendmail.gmail_oauth2|d(false) and sendmail_enable

- name: "Create files for msmtp"
  become: yes
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ application.path }}/msmtp/{{ item.file }}"
    owner: "{{ application.process_user }}"
    group: "{{ application.process_group }}"
    mode: "{{ item.mode }}"
  when: application.sendmail.gmail_oauth2|d(false) and sendmail_enable
  loop:
    - { file: "msmtp.conf",           mode: "u=rw,g=,o=" }
    - { file: "oauth2token.sh",       mode: "u=rwx,g=,o=" }


### webinstances ################################################################

- name: "Loop over all webinstances for this application"
  include_tasks: webinstance.yml
  loop: "{{ application.webinstances.values()|list }}"
  loop_control:
    loop_var: webinstance

### devmode ####################################################################

- name: Repos for devmode
  include_tasks: devmode_repo.yml
  loop: "{{ application.repos }}"
  loop_control:
    loop_var: repo
    label: "{{ repo.name }}"
  when: applications_devmode | d(false)

### Scripts for application

- name: "Define application specific scripts"
  set_fact:
    application_scripts:
      - file: "mc"
        when: True
      - file: "sudo_-i"
        when: True

# Old naming standard
- name: "Remove unsued script for this application"
  become: yes
  file:
    path: "{{ serveradmin.path }}/{{ organisation.command_prefix }}app_{{ application.fullname }}_{{ item.file }}"
    state: absent
  loop: "{{ application_scripts }}"
  when: not item.when
# New namingstandard, easier aautocomplete with TAB-key:
- name: "Remove unsued script for this application"
  become: yes
  file:
    path: "{{ serveradmin.path }}/{{ organisation.command_prefix }}{{ item.file }}_app_{{ application.fullname }}"
    state: absent
  loop: "{{ application_scripts }}"
  when: not item.when

- name: Create script for this application
  become: yes
  template:
    src: "application_{{ item.file }}.j2"
    dest: "{{ serveradmin.path }}/{{ organisation.command_prefix }}{{ item.file }}_app_{{ application.fullname }}"
    owner: "{{ serveradmin.process_user }}"
    group: "{{ serveradmin.process_group }}"
    mode: "u=rwx,g=rx,o=r"
  when: item.when
  loop: "{{ application_scripts }}"
