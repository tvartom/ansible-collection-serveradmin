---
- include_role:
    name: serveradmin
    tasks_from: get_serveradmin
  tags:
    - bootstrap
# Returns: serveradmin

- name: "Show IP address on login"
  become: yes
  lineinfile:
    path: /etc/issue
    regexp: '\\4'
    line: "IP: \\4\n"
  tags:
    - bootstrap

- name: "Ensure hostname is set"
  become: yes
  hostname:
    name: "{{ inventory_hostname }}"
  when: inventory_hostname is not match('(\d{1,3}\.){3}\d{1,3}')
  # Verkar inte funka på CentOS 8 -> AlmaLinux 8-maskin
  ignore_errors: true
  tags:
    - bootstrap

- name: "Create dir"
  become: yes
  file:
    path: "/home/system"
    state: directory
    owner: root
    group: root
    setype: "_default"
    mode: "u=rwx,g=rx,o=rx"
  tags:
    - bootstrap

- name: Create group for serveradmin
  become: yes
  group:
    name: "{{ serveradmin.process_group }}"
    system: yes
  tags:
    - bootstrap

- name: Adding users to the serveradmin-group
  become: yes
  user:
    name: "{{ item.name }}"
    groups: "{{ serveradmin.process_group }}"
    append: yes
  when: item.sudoer | default(false)
  loop: "{{ users }}"
  tags:
    - bootstrap

- name: Create user for serveradmin
  become: yes
  user:
    name: "{{ serveradmin.process_user }}"
    group: "{{ serveradmin.process_group }}"
    create_home: yes
    home: "/home/system/{{ serveradmin.process_user }}"
    system: yes
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_comment: "{{ serveradmin.process_user }}@{{ inventory_hostname }}  {{ ansible_date_time.date }}"
  register: key_info
  tags:
    - bootstrap

- name: "Make serveradmin-user to sudoer without password"
  include_role:
    name: users
    tasks_from: make_user_sudoer
  vars:
    user: "{{ serveradmin.process_user }}" #Användarnamnet på användaren som ska bli sudoer utan lösenord
  tags:
    - bootstrap

- name: "Install Python3 and pip (YUM)"
  become: yes
  yum:
    name:
      - python3
      - python3-pip
#      - ansible
#      - pandoc
#      - lynx
    state: present
  when: ansible_os_family == "RedHat"
  tags:
    - bootstrap

- name: "Install latest ansible for serveradmin with pip."
  become: yes
  become_user: "{{ serveradmin.process_user }}"
  pip:
    name: ansible
    extra_args: --user
  tags:
    - bootstrap

- name: "Let serveradmin-user have full access to mariadb"
  include_role:
    name: mariadb
    tasks_from: create_user
  vars:
    user:
      name: "{{ serveradmin.process_user }}"
      is_linux_user: true
      sudoer: true
  when: mariadb_enable | d(true)

- name: "Create dir for serveradmin"
  become: yes
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default( serveradmin.process_user, true ) }}"
    group: "{{ item.group | default( serveradmin.process_group, true ) }}"
    setype: "{{ item.setype | default( '_default' ) }}"                  # httpd_sys_content_t
    mode: "{{ item.mode | d('u=rwx,g=rx,o=rx') }}"
  when: item.when | default(True)
  loop:
    - { path: "{{ serveradmin.path }}"}
    - { path: "{{ serveradmin.path }}/repos"}
  tags:
    - bootstrap

- name: "Create scripts for serveradmin"
  become: yes
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ item.path | default(serveradmin.path) }}/{{ item.target }}"
    owner: "{{ item.owner | default(serveradmin.process_user) }}"
    group: "{{ item.group | default(serveradmin.process_group) }}"
    mode: "{{ item.mode | default('u=rwx,g=rx,o=r') }}"
  when: item.when | default(true)
  loop: "{{ serveradmin.files }}"
  tags:
    - bootstrap

- name: "Turn of Message of the day (MOTD)"
  become: yes
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?\s*PrintMotd'
    line: "PrintMotd no"
- debug:
    var: serveradmin
  tags:
    - bootstrap

- name: "Config git for serveradmin-user"
  include_role:
    name: git
    tasks_from: config_git_for_user
  vars:
    user:
      name: "{{ serveradmin.process_user }}"
  tags:
    - bootstrap

# The repo is cloned, but the key for accessing github isn't present
- include_role:
    name: git
    tasks_from: clone_repo
  vars:
    clone_repo:
      dest: "{{ serveradmin.path }}/repos/serveradmin"
      user: "{{ serveradmin.process_user }}"
    repo: "{{ serveradmin.repo }}"
  tags:
    - bootstrap
